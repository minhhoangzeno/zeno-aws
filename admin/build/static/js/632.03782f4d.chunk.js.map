{"version":3,"file":"static/js/632.03782f4d.chunk.js","mappings":"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","sources":["apis/categoryProduct.api.ts","apis/container.api.ts","components/edit-table-cell/index.tsx","helper/getFile.helper.ts","apis/product.api.ts","pages/product/index.tsx"],"sourcesContent":["import { Method, request } from \"../helper/request.helper\";\nimport { ICategoryProduct } from \"../interface/CategoryProduct.interface\";\n\nexport class CategoryProductAPI {\n    static readonly COMPONENT_NAME: string = \"CategoryProducts\";\n\n    static fetchAll = () => {\n        return request({\n            method: Method.GET,\n            url: `/${this.COMPONENT_NAME}`,\n            params: {\n                filter: {\n                    order: \"createdAt DESC\",\n                },\n            },\n        });\n    };\n\n    static create = (data: ICategoryProduct) => {\n        return request({\n            method: Method.POST,\n            url: `/${this.COMPONENT_NAME}`,\n            data,\n        });\n    };\n\n    static update = (id: number, data: ICategoryProduct) => {\n        return request({\n            method: Method.PATCH,\n            url: `/${this.COMPONENT_NAME}/${id}`,\n            data,\n        });\n    };\n\n    static delete = (id: number) => {\n        return request({\n            method: Method.DELETE,\n            url: `/${this.COMPONENT_NAME}/${id}`,\n        });\n    };\n}\n","import { Method, request } from \"../helper/request.helper\";\n\nexport class ContainerAPI {\n    static readonly COMPONENT_NAME: string = \"Containers\";\n\n    static upload = (file: File) => {\n        const data = new FormData();\n        data.append(\"file\", file);\n        return request({\n            method: Method.POST,\n            url: `/${this.COMPONENT_NAME}/image/upload`,\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            data,\n        });\n    };\n}\n","import { Form, Input, InputNumber } from \"antd\";\n\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: string;\n  inputType: \"number\" | \"text\";\n  record: unknown;\n  index: number;\n  children: React.ReactNode;\n}\n\nexport const EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n","import { AppConfig } from \"../AppConfig\";\nexport const GetFile = (info: any) => {\n  const photoURL = `${AppConfig.apiUrl}/Containers/image/download/${info.result.files.file[0].name}`;\n  return photoURL;\n};\n","import { Method, request } from \"../helper/request.helper\";\nimport { IProduct } from \"../interface/Product.interface\";\n\nexport class ProductAPI {\n    static readonly COMPONENT_NAME: string = \"Products\";\n\n    static fetchAll = () => {\n        return request({\n            method: Method.GET,\n            url: `/${this.COMPONENT_NAME}`,\n            params: {\n                filter: {\n                    order: \"createdAt DESC\",\n                },\n            },\n        });\n    };\n\n    static createMulti = (req: IProduct[]) => {\n        return request({\n            method: Method.POST,\n            url: `/${this.COMPONENT_NAME}`,\n            data: req,\n        });\n    };\n\n    static create = (data: IProduct) => {\n        return request({\n            method: Method.POST,\n            url: `/${this.COMPONENT_NAME}`,\n            data,\n        });\n    };\n\n    static update = (id: number, data: IProduct) => {\n        return request({\n            method: Method.PATCH,\n            url: `/${this.COMPONENT_NAME}/${id}`,\n            data,\n        });\n    };\n\n    static delete = (id: number) => {\n        return request({\n            method: Method.DELETE,\n            url: `/${this.COMPONENT_NAME}/${id}`,\n        });\n    };\n}\n","import {\n  CheckOutlined,\n  CloseOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Avatar,\n  Button,\n  Form,\n  message,\n  Popconfirm,\n  Row,\n  Select,\n  Table,\n  Tooltip,\n  Typography,\n  Upload,\n} from \"antd\";\nimport { UploadChangeParam } from \"antd/es/upload\";\nimport { useEffect, useState } from \"react\";\nimport { ContainerAPI } from \"../../apis/container.api\";\nimport { ProductAPI } from \"../../apis/product.api\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport {\n  AddProduct,\n  DeleteProduct,\n  GetProduct,\n  SetProduct,\n  UpdateProduct,\n} from \"../../app/reducers/Product/Product.reducer\";\nimport {\n  SetCategoryProduct,\n  GetCategoryProduct,\n} from \"../../app/reducers/CategoryProduct/CategoryProduct.reducer\";\nimport productPNG from \"../../assets/images/product.png\";\nimport { EditableCell } from \"../../components/edit-table-cell\";\nimport { GetFile } from \"../../helper/getFile.helper\";\nimport { IProduct } from \"../../interface/Product.interface\";\nimport \"./index.css\";\n\nimport { ICategoryProduct } from \"../../interface/CategoryProduct.interface\";\nimport { CategoryProductAPI } from \"../../apis/categoryProduct.api\";\n\nconst { Title, Paragraph } = Typography;\nconst { Option } = Select;\nexport default function Product() {\n  const data = useAppSelector(GetProduct);\n  const categoryProduct = useAppSelector(GetCategoryProduct);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    ProductAPI.fetchAll().then((result) => {\n      dispatch(SetProduct(result.data));\n    });\n    CategoryProductAPI.fetchAll().then((result) => {\n      dispatch(SetCategoryProduct(result.data));\n    });\n  }, [dispatch]);\n\n  const [form] = Form.useForm();\n  const isEditing = (record: IProduct) => record.id === editingKey;\n  const [editingKey, setEditingKey] = useState<number | undefined>();\n\n  const edit = (record: Partial<IProduct>) => {\n    form.setFieldsValue({ ...record });\n    setEditingKey(record.id);\n  };\n\n  const cancel = () => {\n    setEditingKey(undefined);\n  };\n\n  const save = (record: IProduct) => {\n    try {\n      if (record.id) {\n        const values = form.getFieldsValue() as IProduct;\n        let isError = false;\n        const errors = form.getFieldsError();\n\n        errors.forEach((el) => {\n          if (el.errors.length > 0) {\n            isError = true;\n          }\n        });\n\n        if (!isError) {\n          ProductAPI.update(record.id, values).then((result) => {\n            dispatch(UpdateProduct(result.data));\n            setEditingKey(undefined);\n          });\n        } else {\n          message.error(\"Validate Failed\");\n        }\n      } else {\n        message.error(\"Validate Failed\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const upload = (record: IProduct, info: UploadChangeParam) => {\n    ContainerAPI.upload(info.file.originFileObj as File).then((result) => {\n      const photoURL = GetFile(result.data);\n      if (record.id) {\n        ProductAPI.update(record.id, { ...record, photoURL }).then((result) => {\n          dispatch(UpdateProduct(result.data));\n        });\n      }\n    });\n  };\n  const changeCategoryProduct = (record: IProduct, e: number | string) => {\n    if (record.id && typeof e === \"number\") {\n      ProductAPI.update(record.id, { ...record, categoryProductId: e }).then(\n        (result) => {\n          dispatch(UpdateProduct(result.data));\n        }\n      );\n    }\n  };\n  const columns = [\n    {\n      title: \"STT\",\n      dataIndex: \"id\",\n      render: (_: null, record: IProduct) => {\n        const idx = data.findIndex((el: IProduct) => el.id === record.id);\n        return <Typography.Title level={5}>{idx + 1}</Typography.Title>;\n      },\n    },\n    {\n      title: \"Tên\",\n      dataIndex: \"title\",\n      width: \"10%\",\n      editable: true,\n    },\n    {\n      title: \"Giá\",\n      dataIndex: \"price\",\n      width: \"10%\",\n      editable: true,\n      render: (_: null, record: IProduct) => {\n        return (\n          <>\n            {record.price?.toLocaleString(\"it-IT\", {\n              style: \"currency\",\n              currency: \"VND\",\n            })}\n          </>\n        );\n      },\n    },\n    {\n      title: \"Hình ảnh\",\n      width: \"10%\",\n      render: (_: null, record: IProduct) => {\n        return (\n          <>\n            <Upload\n              customRequest={(options) => {\n                if (options.onSuccess) {\n                  options.onSuccess(\"ok\");\n                }\n              }}\n              onChange={(e) => upload(record, e)}\n              maxCount={1}\n              showUploadList={false}\n            >\n              <Avatar\n                src={record.photoURL ? record.photoURL : productPNG}\n                size=\"large\"\n              />\n            </Upload>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Màu sắc\",\n      dataIndex: \"color\",\n      width: \"7%\",\n      editable: true,\n    },\n    {\n      title: \"Danh mục sản phẩm\",\n      dataIndex: \"categoryProductId\",\n      render: (_: any, record: IProduct) => {\n        return (\n          <>\n            <Select\n              value={record.categoryProductId}\n              style={{ width: 180 }}\n              onChange={(e) => changeCategoryProduct(record, e)}\n            >\n              {categoryProduct.length > 0 &&\n                categoryProduct.map(\n                  (cateProduct: ICategoryProduct, index: number) => {\n                    return (\n                      <Option key={index} value={cateProduct.id}>\n                        {cateProduct.title}\n                      </Option>\n                    );\n                  }\n                )}\n            </Select>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Mô tả\",\n      dataIndex: \"metaDescription\",\n      width: \"20%\",\n      editable: true,\n      render: (_: null, record: IProduct) => {\n        return (\n          <Tooltip\n            title={record.metaDescription}\n            style={{ height: 150 }}\n            placement=\"bottom\"\n          >\n            <Paragraph ellipsis={{ rows: 2, suffix: \"...\" }}>\n              {record.metaDescription}\n            </Paragraph>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: \"Kích cỡ\",\n      dataIndex: \"size\",\n      width: \"7%\",\n      editable: true,\n    },\n    {\n      title: \"Thiết lập\",\n      render: (_: null, record: IProduct) => {\n        const editTable = isEditing(record);\n        return editTable ? (\n          <>\n            <Tooltip title=\"Lưu\">\n              <Typography.Link className=\"mr-4\" onClick={() => save(record)}>\n                <CheckOutlined style={{ fontSize: \"130%\" }} />\n              </Typography.Link>\n            </Tooltip>\n            <Tooltip title=\"Đóng\">\n              <Typography.Link onClick={cancel}>\n                <CloseOutlined style={{ fontSize: \"130%\" }} />\n              </Typography.Link>\n            </Tooltip>\n          </>\n        ) : (\n          <>\n            <Tooltip title=\"Sửa\">\n              <Typography.Link\n                className=\"mr-4\"\n                disabled={editingKey !== undefined}\n                onClick={() => edit(record)}\n              >\n                <EditOutlined style={{ fontSize: \"130%\" }} />\n              </Typography.Link>\n            </Tooltip>\n            <Popconfirm\n              title=\"Bạn có chắc chắn muốn xóa không?\"\n              onConfirm={() => deleteRecord(record)}\n            >\n              <Typography.Link className=\"mr-4\">\n                <DeleteOutlined style={{ fontSize: \"130%\" }} />\n              </Typography.Link>\n            </Popconfirm>\n\n            <Tooltip title=\"Nhân bản\">\n              <Typography.Link>\n                <CopyOutlined style={{ fontSize: \"130%\" }} />\n              </Typography.Link>\n            </Tooltip>\n          </>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: IProduct) => ({\n        record: record,\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  const add = () => {\n    ProductAPI.create({\n      title: \"Product\",\n      price: 200000,\n      color: \"\",\n      size: \"S\",\n      metaDescription: \"\",\n    }).then((result) => {\n      dispatch(AddProduct(result.data));\n    });\n  };\n\n  const deleteRecord = (record: IProduct) => {\n    if (record.id) {\n      ProductAPI.delete(record.id)\n        .then(() => {\n          dispatch(DeleteProduct(record));\n        })\n        .catch((err) => {\n          message.error(\"Error\");\n        });\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Title level={3}>Sản phẩm</Title>\n      </Row>\n      <Row className=\"mb-4\">\n        <Button\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          className=\"mr-4\"\n          onClick={add}\n        >\n          Thêm mới\n        </Button>\n      </Row>\n      <Form form={form} component={false}>\n        <Table\n          columns={mergedColumns}\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          dataSource={data}\n          bordered\n          rowKey=\"id\"\n          pagination={{ pageSize: 10 }}\n        />\n      </Form>\n    </>\n  );\n}\n"],"names":["CategoryProductAPI","_createClass","_classCallCheck","COMPONENT_NAME","fetchAll","request","method","Method","url","concat","params","filter","order","create","data","update","id","delete","ContainerAPI","upload","file","FormData","append","headers","EditableCell","_ref","editing","dataIndex","title","inputType","children","record","index","restProps","_objectWithoutProperties","_excluded","inputNode","_jsx","InputNumber","Input","_objectSpread","Form","name","style","margin","rules","required","message","GetFile","info","AppConfig","result","files","ProductAPI","createMulti","req","Title","Typography","Paragraph","Option","Select","Product","useAppSelector","GetProduct","categoryProduct","GetCategoryProduct","dispatch","useAppDispatch","useEffect","then","SetProduct","SetCategoryProduct","_Form$useForm","form","_slicedToArray","isEditing","editingKey","_useState","useState","_useState2","setEditingKey","cancel","undefined","mergedColumns","render","_","idx","findIndex","el","level","width","editable","_record$price","_Fragment","price","toLocaleString","currency","Upload","customRequest","options","onSuccess","onChange","e","originFileObj","photoURL","UpdateProduct","maxCount","showUploadList","Avatar","src","productPNG","size","value","categoryProductId","changeCategoryProduct","length","map","cateProduct","Tooltip","metaDescription","height","placement","ellipsis","rows","suffix","_jsxs","className","onClick","values","getFieldsValue","isError","getFieldsError","forEach","errors","errInfo","console","log","save","CheckOutlined","fontSize","CloseOutlined","disabled","setFieldsValue","edit","EditOutlined","Popconfirm","onConfirm","deleteRecord","DeleteOutlined","CopyOutlined","col","onCell","DeleteProduct","catch","err","Row","Button","type","icon","PlusOutlined","color","AddProduct","component","Table","columns","components","body","cell","dataSource","bordered","rowKey","pagination","pageSize"],"sourceRoot":""}