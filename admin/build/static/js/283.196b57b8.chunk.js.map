{"version":3,"file":"static/js/283.196b57b8.chunk.js","mappings":"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","sources":["apis/durationTime.api.ts","components/duration-time/ModalAddDurationTime.tsx","components/duration-time/ModalEditDurationTime.tsx","pages/duration-time/index.tsx"],"sourcesContent":["import { Method, request } from \"../helper/request.helper\";\nimport { IDurationTime } from \"../interface/DurationTime.interface\";\n\nexport class DurationTimeAPI {\n  static readonly COMPONENT_NAME: string = \"DurationTimes\";\n\n  static fetchAll = () => {\n    return request({\n      method: Method.GET,\n      url: `/${this.COMPONENT_NAME}`,\n    });\n  };\n\n  static delete = (id: number) => {\n    return request({\n      method: Method.DELETE,\n      url: `/${this.COMPONENT_NAME}/${id}`,\n    });\n  };\n\n  static add = (data: IDurationTime) => {\n    return request({\n      method: Method.POST,\n      url: `/${this.COMPONENT_NAME}`,\n      data,\n    });\n  };\n\n  static update = (id: number, data: IDurationTime) => {\n    return request({\n      method: Method.PATCH,\n      url: `/${this.COMPONENT_NAME}/${id}`,\n      data,\n    });\n  };\n}\n","import { Button, Form, Input, message, Modal, Row, Typography } from \"antd\";\nimport { DurationTimeAPI } from \"../../apis/durationTime.api\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { AddDurationTime } from \"../../app/reducers/DurationTime/DurationTime.reducer\";\nimport { IDurationTime } from \"../../interface/DurationTime.interface\";\n\ninterface AddDurationTimeProps {\n  isModalOpen: boolean;\n  setIsModalOpen: (el: boolean) => void;\n}\n\nexport default function ModalAddDurationTime(props: AddDurationTimeProps) {\n  const [form] = Form.useForm();\n  const { isModalOpen, setIsModalOpen } = props;\n  const dispatch = useAppDispatch();\n  const onFinishFailed = () => {\n    message.error(\"Error!\");\n  };\n  const onFinish = (values: IDurationTime) => {\n    DurationTimeAPI.add(values)\n      .then((result) => {\n        dispatch(AddDurationTime(result.data));\n        message.success(\"Success\");\n        setIsModalOpen(false);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n\n        message.error(\"Error!\");\n      });\n  };\n  return (\n    <>\n      <Modal\n        open={isModalOpen}\n        destroyOnClose={true}\n        footer={null}\n        onCancel={() => setIsModalOpen(false)}\n        title={<Typography.Text>Thêm khung giờ</Typography.Text>}\n      >\n        <Row>\n          <Form\n            form={form}\n            colon={false}\n            autoComplete=\"off\"\n            className=\"w-full\"\n            onFinishFailed={onFinishFailed}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Tiêu đề\" name=\"title\" required>\n              <Input />\n            </Form.Item>\n            <Row className=\"justify-end\">\n              <Button className=\"mr-4\" onClick={() => setIsModalOpen(false)}>\n                Đóng\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Lưu\n              </Button>\n            </Row>\n          </Form>\n        </Row>\n      </Modal>\n    </>\n  );\n}\n","import { Button, Form, Input, message, Modal, Row, Typography } from \"antd\";\nimport { useEffect } from \"react\";\nimport { DurationTimeAPI } from \"../../apis/durationTime.api\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { UpdateDurationTime } from \"../../app/reducers/DurationTime/DurationTime.reducer\";\nimport { IDurationTime } from \"../../interface/DurationTime.interface\";\n\ninterface IEditurationTimeProps {\n  isModalOpen: boolean;\n  setIsModalOpen: (el: boolean) => void;\n  record: IDurationTime;\n}\nconst ModalEditDurationTime = (props: IEditurationTimeProps) => {\n  const [form] = Form.useForm();\n  const { isModalOpen, setIsModalOpen, record } = props;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    form.setFieldsValue({\n      title: record.title,\n    });\n  }, [record, form, isModalOpen]);\n  const onFinishFailed = () => {\n    message.error(\"Error!\");\n  };\n\n  const onFinish = (values: IDurationTime) => {\n    if (record.id) {\n      DurationTimeAPI.update(record.id, values)\n        .then((result) => {\n          message.success(\"Success\");\n          dispatch(UpdateDurationTime(result.data));\n          setIsModalOpen(false);\n        })\n        .catch(() => {\n          message.error(\"Error!\");\n        });\n    }\n  };\n  return (\n    <>\n      <Modal\n        open={isModalOpen}\n        destroyOnClose={true}\n        footer={null}\n        onCancel={() => setIsModalOpen(false)}\n        title={<Typography.Text>Sửa khung giờ</Typography.Text>}\n      >\n        <Row>\n          <Form\n            form={form}\n            colon={false}\n            autoComplete=\"off\"\n            className=\"w-full\"\n            onFinishFailed={onFinishFailed}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Tiêu đề\" name=\"title\" required>\n              <Input />\n            </Form.Item>\n            <Row className=\"justify-end\">\n              <Button className=\"mr-4\" onClick={() => setIsModalOpen(false)}>\n                Đóng\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Lưu\n              </Button>\n            </Row>\n          </Form>\n        </Row>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalEditDurationTime;\n","import { DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, message, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { DurationTimeAPI } from \"../../apis/durationTime.api\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport {\n  DeleteDurationTime,\n  GetDurationTime,\n  SetDurationTime\n} from \"../../app/reducers/DurationTime/DurationTime.reducer\";\nimport ModalAddDurationTime from \"../../components/duration-time/ModalAddDurationTime\";\nimport ModalEditDurationTime from \"../../components/duration-time/ModalEditDurationTime\";\nimport { IDurationTime } from \"../../interface/DurationTime.interface\";\n\nexport default function DurationTime() {\n  const data = useAppSelector(GetDurationTime);\n  const dispatch = useAppDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  useEffect(() => {\n    DurationTimeAPI.fetchAll().then((result) => {\n      dispatch(SetDurationTime(result.data));\n    });\n  }, [dispatch]);\n\n  const columns = [\n    {\n      title: \"STT\",\n      render: (_: null, __: IDurationTime, index: number) => {\n        return <Typography.Title level={5}>{index + 1}</Typography.Title>;\n      },\n    },\n    {\n      title: \"Khung giờ\",\n      dataIndex: \"title\",\n      width: \"40%\",\n    },\n    {\n      title: \"Thiết lập\",\n      render: (_: null, record: IDurationTime) => {\n        return <TableItem record={record} />;\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Button\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          className=\"mr-4\"\n          onClick={() => setIsModalOpen(true)}\n        ></Button>\n      </Row>\n\n      <ModalAddDurationTime\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n      />\n\n      <Table\n        columns={columns}\n        dataSource={data}\n        bordered\n        rowKey=\"id\"\n        pagination={false}\n      />\n    </>\n  );\n}\n\ninterface ITableItemProps {\n  record: IDurationTime;\n}\nfunction TableItem(props: ITableItemProps) {\n  const { record } = props;\n  const dispatch = useAppDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const deleteRecord = () => {\n    if (record.id) {\n      DurationTimeAPI.delete(record.id)\n        .then(() => {\n          dispatch(DeleteDurationTime(record));\n        })\n        .catch((err) => {\n          message.error(\"Error\");\n        });\n    }\n  };\n  return (\n    <>\n      <Popconfirm\n        title=\"Bạn có chắc chắn muốn xóa không?\"\n        onConfirm={deleteRecord}\n      >\n        <Typography.Link className=\"mr-4\">\n          <DeleteOutlined style={{ fontSize: \"130%\" }} />\n        </Typography.Link>\n      </Popconfirm>\n\n      <Typography.Link className=\"mr-4\" onClick={() => setIsModalOpen(true)}>\n        <EditOutlined style={{ fontSize: \"130%\" }} />\n      </Typography.Link>\n\n      <ModalEditDurationTime\n        record={record}\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n      />\n    </>\n  );\n}\n"],"names":["DurationTimeAPI","_createClass","_classCallCheck","COMPONENT_NAME","fetchAll","request","method","Method","url","concat","delete","id","add","data","update","ModalAddDurationTime","props","_Form$useForm","Form","form","_slicedToArray","isModalOpen","setIsModalOpen","dispatch","useAppDispatch","_jsx","_Fragment","children","Modal","open","destroyOnClose","footer","onCancel","title","Typography","Row","_jsxs","colon","autoComplete","className","onFinishFailed","message","onFinish","values","then","result","AddDurationTime","catch","err","console","log","label","name","required","Input","Button","onClick","type","htmlType","record","useEffect","setFieldsValue","UpdateDurationTime","DurationTime","useAppSelector","GetDurationTime","_useState","useState","_useState2","SetDurationTime","columns","render","_","__","index","level","dataIndex","width","TableItem","icon","PlusOutlined","Table","dataSource","bordered","rowKey","pagination","_useState3","_useState4","Popconfirm","onConfirm","DeleteDurationTime","DeleteOutlined","style","fontSize","EditOutlined","ModalEditDurationTime"],"sourceRoot":""}