{"version":3,"file":"static/js/813.42f71cb1.chunk.js","mappings":"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","sources":["apis/container.api.ts","components/edit-table-cell/index.tsx","helper/getFile.helper.ts","apis/banner.api.ts","pages/banner/index.tsx"],"sourcesContent":["import { Method, request } from \"../helper/request.helper\";\r\n\r\nexport class ContainerAPI {\r\n    static readonly COMPONENT_NAME: string = \"Containers\";\r\n\r\n    static upload = (file: File) => {\r\n        const data = new FormData();\r\n        data.append(\"file\", file);\r\n        return request({\r\n            method: Method.POST,\r\n            url: `/${this.COMPONENT_NAME}/image/upload`,\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n            data,\r\n        });\r\n    };\r\n}\r\n","import { Form, Input, InputNumber } from \"antd\";\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n  editing: boolean;\r\n  dataIndex: string;\r\n  title: string;\r\n  inputType: \"number\" | \"text\";\r\n  record: unknown;\r\n  index: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditableCell: React.FC<EditableCellProps> = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{ margin: 0 }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n","import { AppConfig } from \"../AppConfig\";\r\nexport const GetFile = (info: any) => {\r\n  const photoURL = `${AppConfig.apiUrl}/Containers/image/download/${info.result.files.file[0].name}`;\r\n  return photoURL;\r\n};\r\n","import { Method, request } from \"../helper/request.helper\";\r\nimport { IBanner } from \"../interface/Banner.interface\";\r\n\r\nexport class BannerAPI {\r\n    static readonly COMPONENT_NAME: string = \"Banners\";\r\n\r\n    static fetchAll = () => {\r\n        return request({\r\n            method: Method.GET,\r\n            url: `/${this.COMPONENT_NAME}`,\r\n            params: {\r\n                filter: {\r\n                    order: \"createdAt DESC\",\r\n                },\r\n            },\r\n        });\r\n    };\r\n\r\n    static create = (data: IBanner) => {\r\n      console.log(\"data\",data);\r\n      \r\n        return request({\r\n            method: Method.POST,\r\n            url: `/${this.COMPONENT_NAME}`,\r\n            data,\r\n        });\r\n    };\r\n\r\n    static update = (id: number, data: IBanner) => {\r\n        return request({\r\n            method: Method.PATCH,\r\n            url: `/${this.COMPONENT_NAME}/${id}`,\r\n            data,\r\n        });\r\n    };\r\n\r\n    static delete = (id: number) => {\r\n        return request({\r\n            method: Method.DELETE,\r\n            url: `/${this.COMPONENT_NAME}/${id}`,\r\n        });\r\n    };\r\n}\r\n","import {\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Image,\r\n  Popconfirm,\r\n  Row,\r\n  Table,\r\n  Typography,\r\n  Upload,\r\n} from \"antd\";\r\nimport { RcFile, UploadChangeParam } from \"antd/es/upload\";\r\nimport { useEffect } from \"react\";\r\nimport { BannerAPI } from \"../../apis/banner.api\";\r\nimport { ContainerAPI } from \"../../apis/container.api\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  AddBanner,\r\n  DeleteBanner,\r\n  GetBanner,\r\n  SetBanner,\r\n  UpdateBanner,\r\n} from \"../../app/reducers/Banner/Banner.reducer\";\r\nimport productPNG from \"../../assets/images/product.png\";\r\nimport { EditableCell } from \"../../components/edit-table-cell\";\r\nimport { GetFile } from \"../../helper/getFile.helper\";\r\nimport { IBanner } from \"../../interface/Banner.interface\";\r\nimport { ICategoryBlog } from \"../../interface/CategoryBlog.interface\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Banner() {\r\n  const data = useAppSelector(GetBanner);\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    BannerAPI.fetchAll().then((result: any) => {\r\n      dispatch(SetBanner(result.data));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const remove = (record: Partial<IBanner>) => {\r\n    if (record.id) {\r\n      BannerAPI.delete(record.id).then(() => {\r\n        dispatch(DeleteBanner(record));\r\n      });\r\n    }\r\n  };\r\n  const upload = (record: IBanner, info: UploadChangeParam) => {\r\n    ContainerAPI.upload(info.file.originFileObj as File).then((result) => {\r\n      const photoURL = GetFile(result.data);\r\n      if (record.id) {\r\n        BannerAPI.update(record.id, { ...record, photoURL }).then((result) => {\r\n          dispatch(UpdateBanner(result.data));\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      dataIndex: \"id\",\r\n      render: (_: null, record: ICategoryBlog) => {\r\n        const idx = data.findIndex((el: ICategoryBlog) => el.id === record.id);\r\n        return <Typography.Title level={5}>{idx + 1}</Typography.Title>;\r\n      },\r\n    },\r\n    {\r\n      title: \"áº¢nh\",\r\n      dataIndex: \"Background\",\r\n      width: \"40%\",\r\n      render: (_: null, record: IBanner) => {\r\n        return (\r\n          <Row className=\"flex-col\">\r\n            <Image\r\n              src={record.photoURL ? record.photoURL : productPNG}\r\n              height={150}\r\n            />\r\n            <Upload\r\n              customRequest={(options) => {\r\n                if (options.onSuccess) {\r\n                  options.onSuccess(\"ok\");\r\n                }\r\n              }}\r\n              onChange={(e) => upload(record, e)}\r\n              maxCount={1}\r\n              showUploadList={false}\r\n              className=\"cursor-pointer mt-4\"\r\n            >\r\n              <Button type=\"default\" icon={<UploadOutlined />} className=\"mr-4\">\r\n                Thay Äá»i\r\n              </Button>\r\n            </Upload>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Thiáº¿t láº­p\",\r\n      render: (_: null, record: IBanner) => {\r\n        return (\r\n          <Popconfirm\r\n            title=\"Báº¡n cÃ³ cháº¯c cháº¯n muá»n xÃ³a khÃ´ng?\"\r\n            onConfirm={() => {\r\n              remove(record);\r\n            }}\r\n          >\r\n            <Typography.Link className=\"mr-4\">\r\n              <DeleteOutlined style={{ fontSize: \"130%\" }} />\r\n            </Typography.Link>\r\n          </Popconfirm>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const beforeUpload = (file: RcFile) => {\r\n    // Access file content here and do something with it\r\n    ContainerAPI.upload(file as File).then((result) => {\r\n      const photoURL = GetFile(result.data);\r\n      if (photoURL) {\r\n        BannerAPI.create({ photoURL }).then((result) => {\r\n          dispatch(AddBanner(result.data));\r\n        });\r\n      }\r\n    });\r\n    // Prevent upload\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Title level={3}>áº¢nh bÃ¬a khuyáº¿n mÃ£i</Title>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Upload\r\n          customRequest={(options) => {\r\n            if (options.onSuccess) {\r\n              options.onSuccess(\"ok\");\r\n            }\r\n          }}\r\n          maxCount={1}\r\n          showUploadList={false}\r\n          className=\"cursor-pointer\"\r\n          beforeUpload={beforeUpload}\r\n        >\r\n          <Button type=\"primary\" icon={<PlusOutlined />} className=\"mr-4\">\r\n            ThÃªm má»i\r\n          </Button>\r\n        </Upload>\r\n      </Row>\r\n      <Table\r\n        columns={columns}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        dataSource={data}\r\n        bordered\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 10 }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["ContainerAPI","_createClass","_classCallCheck","COMPONENT_NAME","upload","file","data","FormData","append","request","method","Method","url","concat","headers","EditableCell","_ref","editing","dataIndex","title","inputType","children","record","index","restProps","_objectWithoutProperties","_excluded","inputNode","_jsx","InputNumber","Input","_objectSpread","Form","name","style","margin","rules","required","message","GetFile","info","AppConfig","result","files","BannerAPI","fetchAll","params","filter","order","create","console","log","update","id","delete","Title","Typography","Banner","useAppSelector","GetBanner","dispatch","useAppDispatch","useEffect","then","SetBanner","columns","render","_","idx","findIndex","el","level","width","_jsxs","Row","className","Image","src","photoURL","productPNG","height","Upload","customRequest","options","onSuccess","onChange","e","originFileObj","UpdateBanner","maxCount","showUploadList","Button","type","icon","UploadOutlined","Popconfirm","onConfirm","DeleteBanner","remove","DeleteOutlined","fontSize","_Fragment","beforeUpload","AddBanner","PlusOutlined","Table","components","body","cell","dataSource","bordered","rowKey","pagination","pageSize"],"sourceRoot":""}