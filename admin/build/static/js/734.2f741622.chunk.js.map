{"version":3,"file":"static/js/734.2f741622.chunk.js","mappings":"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","sources":["apis/order.api.ts","components/edit-table-cell/index.tsx","helper/getAddress.helper.ts","apis/orderproduct.api.ts","pages/order/ModalOrder.tsx","pages/order/TableSettingItem.tsx","pages/order/index.tsx"],"sourcesContent":["import { Method, request } from \"../helper/request.helper\";\r\nimport { IOrder } from \"../interface/Order.interface\";\r\n\r\nexport class OrderAPI {\r\n  static readonly COMPONENT_NAME: string = \"Orders\";\r\n\r\n  static fetchAll = () => {\r\n    return request({\r\n      method: Method.GET,\r\n      url: `/${this.COMPONENT_NAME}`,\r\n      params: {\r\n        filter: {\r\n          order: \"createdAt DESC\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  static createMulti = (req: IOrder[]) => {\r\n    return request({\r\n      method: Method.POST,\r\n      url: `/${this.COMPONENT_NAME}`,\r\n      data: req,\r\n    });\r\n  };\r\n\r\n  static create = (data: IOrder) => {\r\n    return request({\r\n      method: Method.POST,\r\n      url: `/${this.COMPONENT_NAME}`,\r\n      data,\r\n    });\r\n  };\r\n\r\n  static update = (id: number, data: IOrder) => {\r\n    return request({\r\n      method: Method.PATCH,\r\n      url: `/${this.COMPONENT_NAME}/${id}`,\r\n      data,\r\n    });\r\n  };\r\n\r\n  static delete = (id: number) => {\r\n    return request({\r\n      method: Method.DELETE,\r\n      url: `/${this.COMPONENT_NAME}/${id}`,\r\n    });\r\n  };\r\n\r\n  static statisticAmount = (year: number) => {\r\n    return request({\r\n      method: Method.GET,\r\n      url: `/${this.COMPONENT_NAME}/statistic-amount`,\r\n      params: {\r\n        year,\r\n      },\r\n    });\r\n  };\r\n\r\n  static statisticRevenue = (year: number) => {\r\n    return request({\r\n      method: Method.GET,\r\n      url: `/${this.COMPONENT_NAME}/statistic-revenue`,\r\n      params: {\r\n        year,\r\n      },\r\n    });\r\n  };\r\n}\r\n","import { Form, Input, InputNumber } from \"antd\";\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n  editing: boolean;\r\n  dataIndex: string;\r\n  title: string;\r\n  inputType: \"number\" | \"text\";\r\n  record: unknown;\r\n  index: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditableCell: React.FC<EditableCellProps> = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{ margin: 0 }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAddress = () => {\r\n  return axios\r\n    .get(\"https://provinces.open-api.vn/api/?depth=2\")\r\n    .then((result) => {\r\n      return result.data;\r\n    })\r\n    .catch((err) => console.log(\"err\"));\r\n};\r\n","import { Method, request } from \"../helper/request.helper\";\r\n// import { IOrderProduct } from \"../interface/OrderProduct.interface\";\r\n\r\nexport class OrderProductAPI {\r\n  static readonly COMPONENT_NAME: string = \"OrderProducts\";\r\n\r\n  static fetchFromOrder = (orderId: number) => {\r\n    return request({\r\n      method: Method.GET,\r\n      url: `/${this.COMPONENT_NAME}`,\r\n      params: {\r\n        filter: {\r\n          where: { orderId },\r\n          include: \"product\",\r\n        },\r\n      },\r\n    });\r\n  };\r\n}\r\n","import { Avatar, Button, Modal, Row, Table, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OrderProductAPI } from \"../../apis/orderproduct.api\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  GetOrderProduct,\r\n  SetOrderProduct\r\n} from \"../../app/reducers/OrderProduct/OrderProduct.reducer\";\r\nimport productPNG from \"../../assets/images/product.png\";\r\nimport { EditableCell } from \"../../components/edit-table-cell\";\r\nimport { getAddress } from \"../../helper/getAddress.helper\";\r\nimport { ICity } from \"../../interface/Address.interface\";\r\nimport { IOrder } from \"../../interface/Order.interface\";\r\nimport { IOrderProduct } from \"../../interface/OrderProduct.interface\";\r\nimport { IProduct } from \"../../interface/Product.interface\";\r\nimport \"./index.css\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface IModalOrderProps {\r\n  modalOpen: boolean;\r\n  setModalOpen: (el: boolean) => void;\r\n  order?: IOrder;\r\n}\r\n\r\nexport default function ModalOrder(props: IModalOrderProps) {\r\n  const { modalOpen, setModalOpen, order } = props;\r\n  const orderproducts = useAppSelector(GetOrderProduct);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [orders, setOrders] = useState<IOrder[]>([]);\r\n\r\n  const [location, setLocation] = useState<ICity[]>([]);\r\n\r\n  const searchAddress = async () => {\r\n    const result = await getAddress();\r\n    setLocation(result);\r\n  };\r\n\r\n  const search = (orderId: number) => {\r\n    if (orderId) {\r\n      OrderProductAPI.fetchFromOrder(orderId)\r\n        .then((result) => {\r\n          dispatch(SetOrderProduct(result.data));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (order?.id) search(order?.id);\r\n    if (order) {\r\n      setOrders([...orders, order]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [order?.id, modalOpen]);\r\n\r\n  useEffect(() => {\r\n    searchAddress();\r\n  }, []);\r\n\r\n  const columnsKH = [\r\n    {\r\n      title: \"Họ tên\",\r\n      width: \"12%\",\r\n      editable: false,\r\n      render(_: null, record: IOrder) {\r\n        return <>{record.firstName + \" \" + record.lastName}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      width: \"10%\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      width: \"20%\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      width: \"20%\",\r\n      editable: false,\r\n      render: (_: null, record: IOrder) => {\r\n        const city = location.find((el) => el.code === record.city);\r\n        const district = city?.districts.find(\r\n          (el) => el.code === record.district\r\n        );\r\n        return (\r\n          <>\r\n            {record.address}-{district?.name} - {city?.name}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Ghi chú\",\r\n      dataIndex: \"note\",\r\n      width: \"20%\",\r\n      editable: false,\r\n    },\r\n  ];\r\n\r\n  const columnsProduct = [\r\n    {\r\n      title: \"Tên sản phẩm\",\r\n      width: \"12%\",\r\n      render: (_: null, record: IOrderProduct) => {\r\n        return <>{record.product.title}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Số lượng\",\r\n      dataIndex: \"amount\",\r\n      width: \"12%\",\r\n    },\r\n    {\r\n      title: \"Giá\",\r\n      dataIndex: \"price\",\r\n      width: \"12%\",\r\n    },\r\n    {\r\n      title: \"Màu\",\r\n      width: \"12%\",\r\n      render: (_: null, record: IOrderProduct) => {\r\n        return <>{record.product.color}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Kích cỡ\",\r\n      width: \"12%\",\r\n      render: (_: null, record: IOrderProduct) => {\r\n        return <>{record.product.size}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hình ảnh\",\r\n      width: \"12%\",\r\n      editable: false,\r\n      render: (_: null, record: IProduct) => {\r\n        return (\r\n          <>\r\n            <Avatar\r\n              src={record.photoURL ? record.photoURL : productPNG}\r\n              size=\"large\"\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mergedColumnsKH = columnsKH.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record: IOrder) => ({\r\n        record: record,\r\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        // editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n\r\n  const mergedColumnsProduct = columnsProduct.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record: IOrder) => ({\r\n        record: record,\r\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          title=\"Chi tiết đơn hàng\"\r\n          style={{ top: 20 }}\r\n          open={modalOpen}\r\n          onOk={() => setModalOpen(false)}\r\n          onCancel={() => setModalOpen(false)}\r\n          footer={null}\r\n          forceRender\r\n        >\r\n          <Row style={{ width: 1000 }}>\r\n            <Text className=\"mb-5\">Thông tin Khách hàng</Text>\r\n            <Table\r\n              columns={mergedColumnsKH}\r\n              components={{\r\n                body: {\r\n                  cell: EditableCell,\r\n                },\r\n              }}\r\n              dataSource={orders}\r\n              bordered\r\n              rowKey=\"id\"\r\n              pagination={false}\r\n              style={{ width: 1000 }}\r\n            />\r\n            <Text className=\"mb-5\">Thông tin giỏ hàng</Text>\r\n            <Table\r\n              columns={mergedColumnsProduct}\r\n              components={{\r\n                body: {\r\n                  cell: EditableCell,\r\n                },\r\n              }}\r\n              dataSource={orderproducts.map((el) => {\r\n                return {\r\n                  ...el,\r\n                  amount: el.amount,\r\n                  price: el.price,\r\n                  product: el.product,\r\n                };\r\n              })}\r\n              bordered\r\n              rowKey=\"id\"\r\n              pagination={false}\r\n              style={{ width: 1000 }}\r\n            />\r\n            <Row className=\"justify-end mt-10 w-full\" style={{ left: 100 }}>\r\n              <Button className=\"mr-4\" onClick={() => setModalOpen(false)}>\r\n                Đóng\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Lưu\r\n              </Button>\r\n            </Row>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { DeleteOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport { Popconfirm, Tooltip, Typography } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { IOrder } from \"../../interface/Order.interface\";\r\nimport ModalOrder from \"./ModalOrder\";\r\n\r\ninterface ITableSettingItemProps {\r\n  deleteOrder: (el: IOrder) => void;\r\n  record: IOrder;\r\n}\r\nexport default function TableSettingItem(props: ITableSettingItemProps) {\r\n  const { deleteOrder, record } = props;\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <ModalOrder\r\n          modalOpen={showModal}\r\n          setModalOpen={setShowModal}\r\n          order={record}\r\n        />\r\n      )}\r\n\r\n      <Tooltip title=\"Xem đơn\">\r\n        <Typography.Link\r\n          className=\"mr-4\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          <EyeOutlined style={{ fontSize: \"130%\" }} />\r\n        </Typography.Link>\r\n      </Tooltip>\r\n      <Popconfirm\r\n        title=\"Bạn có chắc chắn muốn xóa không?\"\r\n        onConfirm={() => deleteOrder(record)}\r\n      >\r\n        <Typography.Link className=\"mr-4\">\r\n          <DeleteOutlined style={{ fontSize: \"130%\" }} />\r\n        </Typography.Link>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n}\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, message, Row, Select, Table, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OrderAPI } from \"../../apis/order.api\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  DeleteOrder,\r\n  GetOrder,\r\n  SetOrder,\r\n  UpdateOrder,\r\n} from \"../../app/reducers/Order/Order.reducer\";\r\nimport { EditableCell } from \"../../components/edit-table-cell\";\r\nimport { getAddress } from \"../../helper/getAddress.helper\";\r\nimport { ICity } from \"../../interface/Address.interface\";\r\nimport { IOrder } from \"../../interface/Order.interface\";\r\nimport TableSettingItem from \"./TableSettingItem\";\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default function Product() {\r\n  const data = useAppSelector(GetOrder);\r\n  const dispatch = useAppDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const [location, setLocation] = useState<ICity[]>([]);\r\n\r\n  useEffect(() => {\r\n    OrderAPI.fetchAll().then((result) => {\r\n      dispatch(SetOrder(result.data));\r\n    });\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    searchAddress();\r\n  }, []);\r\n  const searchAddress = async () => {\r\n    const result = await getAddress();\r\n    setLocation(result);\r\n  };\r\n\r\n  const changeStatus = (record: IOrder, e: string) => {\r\n    if (record.id && typeof e === \"string\") {\r\n      OrderAPI.update(record.id, { ...record, status: e }).then((result) => {\r\n        dispatch(UpdateOrder(result.data));\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteOrder = (record: IOrder) => {\r\n    if (record.id) {\r\n      OrderAPI.delete(record.id)\r\n        .then(() => {\r\n          dispatch(DeleteOrder(record));\r\n        })\r\n        .catch((err) => {\r\n          message.error(\"Error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      dataIndex: \"id\",\r\n      render: (_: null, record: IOrder) => {\r\n        const idx = data.findIndex((el: IOrder) => el.id === record.id);\r\n        return <Typography.Title level={5}>{idx + 1}</Typography.Title>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"code\",\r\n      width: \"7%\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Họ tên\",\r\n      width: \"12%\",\r\n      editable: false,\r\n      render(_: null, record: IOrder) {\r\n        return <>{record.firstName + \" \" + record.lastName}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      width: \"10%\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      width: \"20%\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      width: \"20%\",\r\n      editable: false,\r\n      render: (_: null, record: IOrder) => {\r\n        const city = location.find((el) => el.code === record.city);\r\n        const district = city?.districts.find(\r\n          (el) => el.code === record.district\r\n        );\r\n        return (\r\n          <>\r\n            {district?.name} - {city?.name}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      width: \"10%\",\r\n      editable: false,\r\n      render: (_: any, record: IOrder) => {\r\n        return (\r\n          <>\r\n            <Select\r\n              value={record.status}\r\n              style={{ width: 180 }}\r\n              onChange={(e) => changeStatus(record, e)}\r\n            >\r\n              <Option key={2} value={\"Đã tạo đơn\"}>\r\n                Đã tạo đơn\r\n              </Option>\r\n              <Option key={2} value={\"Thành công\"}>\r\n                Đã tạo đơn\r\n              </Option>\r\n            </Select>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Thiết lập\",\r\n      render: (_: null, record: IOrder) => {\r\n        return (\r\n          <>\r\n            <TableSettingItem deleteOrder={deleteOrder} record={record} />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record: IOrder) => ({\r\n        record: record,\r\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Title level={3}>Sản phẩm</Title>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Button type=\"primary\" icon={<PlusOutlined />} className=\"mr-4\">\r\n          Thêm mới\r\n        </Button>\r\n      </Row>\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          columns={mergedColumns}\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          dataSource={data}\r\n          bordered\r\n          rowKey=\"id\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n"],"names":["OrderAPI","_createClass","_classCallCheck","COMPONENT_NAME","fetchAll","request","method","Method","url","concat","params","filter","order","createMulti","req","data","create","update","id","delete","statisticAmount","year","statisticRevenue","EditableCell","_ref","editing","dataIndex","title","inputType","children","record","index","restProps","_objectWithoutProperties","_excluded","inputNode","_jsx","InputNumber","Input","_objectSpread","Form","name","style","margin","rules","required","message","getAddress","axios","then","result","catch","err","console","log","OrderProductAPI","fetchFromOrder","orderId","where","include","Text","Typography","ModalOrder","props","modalOpen","setModalOpen","orderproducts","useAppSelector","GetOrderProduct","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","orders","setOrders","_useState3","_useState4","location","setLocation","searchAddress","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","useEffect","SetOrderProduct","_toConsumableArray","columnsProduct","width","render","_","_Fragment","product","color","size","editable","Avatar","src","photoURL","productPNG","mergedColumnsKH","firstName","lastName","city","find","el","code","district","districts","_jsxs","address","map","col","onCell","mergedColumnsProduct","Modal","destroyOnClose","top","open","onOk","onCancel","footer","forceRender","Row","className","Table","columns","components","body","cell","dataSource","bordered","rowKey","pagination","amount","price","left","Button","onClick","type","htmlType","TableSettingItem","deleteOrder","showModal","setShowModal","Tooltip","EyeOutlined","fontSize","Popconfirm","onConfirm","DeleteOutlined","Title","Option","Select","Product","GetOrder","_Form$useForm","form","SetOrder","DeleteOrder","mergedColumns","idx","findIndex","level","value","status","onChange","e","UpdateOrder","changeStatus","icon","PlusOutlined","component","pageSize"],"sourceRoot":""}